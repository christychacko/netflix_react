{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\nmodule.exports = {\n  /*\n   * Main entry point into dotenv. Allows configuration before loading .env\n   * @param {Object} options - valid options: path ('.env'), encoding ('utf8')\n   * @returns {Boolean}\n  */\n  config: function (options) {\n    var path = '.env';\n    var encoding = 'utf8';\n    var silent = false;\n    if (options) {\n      if (options.silent) {\n        silent = options.silent;\n      }\n      if (options.path) {\n        path = options.path;\n      }\n      if (options.encoding) {\n        encoding = options.encoding;\n      }\n    }\n    try {\n      // specifying an encoding returns a string instead of a buffer\n      var parsedObj = this.parse(fs.readFileSync(path, {\n        encoding: encoding\n      }));\n      Object.keys(parsedObj).forEach(function (key) {\n        process.env[key] = process.env[key] || parsedObj[key];\n      });\n      return parsedObj;\n    } catch (e) {\n      if (!silent) {\n        console.error(e);\n      }\n      return false;\n    }\n  },\n  /*\n   * Parses a string or buffer into an object\n   * @param {String|Buffer} src - source to be parsed\n   * @returns {Object}\n  */\n  parse: function (src) {\n    var obj = {};\n\n    // convert Buffers before splitting into lines and processing\n    src.toString().split('\\n').forEach(function (line) {\n      // matching \"KEY' and 'VAL' in 'KEY=VAL'\n      var keyValueArr = line.match(/^\\s*([\\w\\.\\-]+)\\s*=\\s*(.*)?\\s*$/);\n      // matched?\n      if (keyValueArr != null) {\n        var key = keyValueArr[1];\n\n        // default undefined or missing values to empty string\n        var value = keyValueArr[2] ? keyValueArr[2] : '';\n\n        // expand newlines in quoted values\n        var len = value ? value.length : 0;\n        if (len > 0 && value.charAt(0) === '\\\"' && value.charAt(len - 1) === '\\\"') {\n          value = value.replace(/\\\\n/gm, '\\n');\n        }\n\n        // remove any surrounding quotes and extra spaces\n        value = value.replace(/(^['\"]|['\"]$)/g, '').trim();\n        obj[key] = value;\n      }\n    });\n    return obj;\n  }\n};\nmodule.exports.load = module.exports.config;","map":{"version":3,"names":["fs","require","module","exports","config","options","path","encoding","silent","parsedObj","parse","readFileSync","Object","keys","forEach","key","process","env","e","console","error","src","obj","toString","split","line","keyValueArr","match","value","len","length","charAt","replace","trim","load"],"sources":["/Users/apps/node_modules/dotenv/lib/main.js"],"sourcesContent":["'use strict'\n\nvar fs = require('fs')\n\nmodule.exports = {\n  /*\n   * Main entry point into dotenv. Allows configuration before loading .env\n   * @param {Object} options - valid options: path ('.env'), encoding ('utf8')\n   * @returns {Boolean}\n  */\n  config: function (options) {\n    var path = '.env'\n    var encoding = 'utf8'\n    var silent = false\n\n    if (options) {\n      if (options.silent) {\n        silent = options.silent\n      }\n      if (options.path) {\n        path = options.path\n      }\n      if (options.encoding) {\n        encoding = options.encoding\n      }\n    }\n\n    try {\n      // specifying an encoding returns a string instead of a buffer\n      var parsedObj = this.parse(fs.readFileSync(path, { encoding: encoding }))\n\n      Object.keys(parsedObj).forEach(function (key) {\n        process.env[key] = process.env[key] || parsedObj[key]\n      })\n\n      return parsedObj\n    } catch (e) {\n      if (!silent) {\n        console.error(e)\n      }\n      return false\n    }\n  },\n\n  /*\n   * Parses a string or buffer into an object\n   * @param {String|Buffer} src - source to be parsed\n   * @returns {Object}\n  */\n  parse: function (src) {\n    var obj = {}\n\n    // convert Buffers before splitting into lines and processing\n    src.toString().split('\\n').forEach(function (line) {\n      // matching \"KEY' and 'VAL' in 'KEY=VAL'\n      var keyValueArr = line.match(/^\\s*([\\w\\.\\-]+)\\s*=\\s*(.*)?\\s*$/)\n      // matched?\n      if (keyValueArr != null) {\n        var key = keyValueArr[1]\n\n        // default undefined or missing values to empty string\n        var value = keyValueArr[2] ? keyValueArr[2] : ''\n\n        // expand newlines in quoted values\n        var len = value ? value.length : 0\n        if (len > 0 && value.charAt(0) === '\\\"' && value.charAt(len - 1) === '\\\"') {\n          value = value.replace(/\\\\n/gm, '\\n')\n        }\n\n        // remove any surrounding quotes and extra spaces\n        value = value.replace(/(^['\"]|['\"]$)/g, '').trim()\n\n        obj[key] = value\n      }\n    })\n\n    return obj\n  }\n\n}\n\nmodule.exports.load = module.exports.config\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAEtBC,MAAM,CAACC,OAAO,GAAG;EACf;AACF;AACA;AACA;AACA;EACEC,MAAM,EAAE,SAAAA,CAAUC,OAAO,EAAE;IACzB,IAAIC,IAAI,GAAG,MAAM;IACjB,IAAIC,QAAQ,GAAG,MAAM;IACrB,IAAIC,MAAM,GAAG,KAAK;IAElB,IAAIH,OAAO,EAAE;MACX,IAAIA,OAAO,CAACG,MAAM,EAAE;QAClBA,MAAM,GAAGH,OAAO,CAACG,MAAM;MACzB;MACA,IAAIH,OAAO,CAACC,IAAI,EAAE;QAChBA,IAAI,GAAGD,OAAO,CAACC,IAAI;MACrB;MACA,IAAID,OAAO,CAACE,QAAQ,EAAE;QACpBA,QAAQ,GAAGF,OAAO,CAACE,QAAQ;MAC7B;IACF;IAEA,IAAI;MACF;MACA,IAAIE,SAAS,GAAG,IAAI,CAACC,KAAK,CAACV,EAAE,CAACW,YAAY,CAACL,IAAI,EAAE;QAAEC,QAAQ,EAAEA;MAAS,CAAC,CAAC,CAAC;MAEzEK,MAAM,CAACC,IAAI,CAACJ,SAAS,CAAC,CAACK,OAAO,CAAC,UAAUC,GAAG,EAAE;QAC5CC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,IAAIN,SAAS,CAACM,GAAG,CAAC;MACvD,CAAC,CAAC;MAEF,OAAON,SAAS;IAClB,CAAC,CAAC,OAAOS,CAAC,EAAE;MACV,IAAI,CAACV,MAAM,EAAE;QACXW,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAClB;MACA,OAAO,KAAK;IACd;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;EACER,KAAK,EAAE,SAAAA,CAAUW,GAAG,EAAE;IACpB,IAAIC,GAAG,GAAG,CAAC,CAAC;;IAEZ;IACAD,GAAG,CAACE,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACV,OAAO,CAAC,UAAUW,IAAI,EAAE;MACjD;MACA,IAAIC,WAAW,GAAGD,IAAI,CAACE,KAAK,CAAC,iCAAiC,CAAC;MAC/D;MACA,IAAID,WAAW,IAAI,IAAI,EAAE;QACvB,IAAIX,GAAG,GAAGW,WAAW,CAAC,CAAC,CAAC;;QAExB;QACA,IAAIE,KAAK,GAAGF,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE;;QAEhD;QACA,IAAIG,GAAG,GAAGD,KAAK,GAAGA,KAAK,CAACE,MAAM,GAAG,CAAC;QAClC,IAAID,GAAG,GAAG,CAAC,IAAID,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,IAAIH,KAAK,CAACG,MAAM,CAACF,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;UACzED,KAAK,GAAGA,KAAK,CAACI,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;QACtC;;QAEA;QACAJ,KAAK,GAAGA,KAAK,CAACI,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;QAElDX,GAAG,CAACP,GAAG,CAAC,GAAGa,KAAK;MAClB;IACF,CAAC,CAAC;IAEF,OAAON,GAAG;EACZ;AAEF,CAAC;AAEDpB,MAAM,CAACC,OAAO,CAAC+B,IAAI,GAAGhC,MAAM,CAACC,OAAO,CAACC,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}