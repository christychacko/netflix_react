{"ast":null,"code":"var _jsxFileName = \"/Users/apps/Desktop/netflix/src/Components/RowPost/RowPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./RowPost.css\";\nimport { imageUrl } from '../constants/constants';\nimport axios from '../../axios';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  setsta;\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data.results[0]);\n      setMovies(response.data.results);\n    }).catch(err => {\n      alert('Network Error');\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n  const handleMovieTrailer = id => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovieTrailer(obj.id),\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${imageUrl + obj.backdrop_path}`,\n        alt: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      opts: opts,\n      videoId: \"2g811Eo7K8U\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(RowPost, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","imageUrl","axios","YouTube","jsxDEV","_jsxDEV","RowPost","props","_s","movies","setMovies","setsta","get","url","then","response","console","log","data","results","catch","err","alert","opts","height","width","playerVars","autoplay","handleMovieTrailer","id","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","obj","onClick","isSmall","src","backdrop_path","alt","videoId","_c","$RefreshReg$"],"sources":["/Users/apps/Desktop/netflix/src/Components/RowPost/RowPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport \"./RowPost.css\"\nimport { imageUrl } from '../constants/constants'\nimport axios from '../../axios'\nimport YouTube from 'react-youtube'\n\n\nfunction RowPost(props) {\n    const [movies, setMovies] = useState([])\n    setsta\n    useEffect(() => {\n       axios.get(props.url).then(response=>{\n        console.log(response.data.results[0])\n        setMovies(response.data.results)\n       }).catch(err=>{\n        alert('Network Error')\n       })\n    }, [])\n\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 0,\n        },\n      };\n\n      const handleMovieTrailer= (id)=>{\n\n      }\n\n    return (\n        <div className='row'>\n            <h2>{props.title}</h2>\n            <div className=\"posters\">\n                {movies.map((obj)=>  \n                    <img \n                    onClick={()=>handleMovieTrailer(obj.id)}\n                    className={props.isSmall ? 'smallPoster' : 'poster' } src={`${imageUrl+obj.backdrop_path}`} alt=\"poster\" />\n                )}\n            </div>\n            <YouTube opts={opts} videoId=\"2g811Eo7K8U\" />\n        </div>\n    )\n}\nexport default RowPost\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,OAAO,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnC,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxCW,MAAM;EACNZ,SAAS,CAAC,MAAM;IACbG,KAAK,CAACU,GAAG,CAACL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAE;MACnCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MACrCT,SAAS,CAACK,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAE;MACbC,KAAK,CAAC,eAAe,CAAC;IACvB,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGC,EAAE,IAAG,CAEhC,CAAC;EAEH,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB1B,OAAA;MAAA0B,QAAA,EAAKxB,KAAK,CAACyB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtB/B,OAAA;MAAKyB,SAAS,EAAC,SAAS;MAAAC,QAAA,EACnBtB,MAAM,CAAC4B,GAAG,CAAEC,GAAG,iBACZjC,OAAA;QACAkC,OAAO,EAAEA,CAAA,KAAIX,kBAAkB,CAACU,GAAG,CAACT,EAAE,CAAE;QACxCC,SAAS,EAAEvB,KAAK,CAACiC,OAAO,GAAG,aAAa,GAAG,QAAU;QAACC,GAAG,EAAG,GAAExC,QAAQ,GAACqC,GAAG,CAACI,aAAc,EAAE;QAACC,GAAG,EAAC;MAAQ;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC9G;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACN/B,OAAA,CAACF,OAAO;MAACoB,IAAI,EAAEA,IAAK;MAACqB,OAAO,EAAC;IAAa;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd;AAAC5B,EAAA,CAtCQF,OAAO;AAAAuC,EAAA,GAAPvC,OAAO;AAuChB,eAAeA,OAAO;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}