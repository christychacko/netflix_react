{"ast":null,"code":"module.exports = (() => {\n  'use strict';\n\n  const qs = require('querystring');\n  class EndpointRequest {\n    constructor(router, path, params) {\n      this.router = router;\n      this.url = path + (params ? `?${qs.stringify(params)}` : '');\n      this.route = this.router.find(this.url);\n      if (!this.route) {\n        throw new Error(`Route for ${this._path} does not exist`);\n      }\n    }\n    mock(method, body, callback) {\n      return this.router.dispatch(this.router.prepare('::1', this.url, method, {}, body), (err, status, headers, body) => {\n        let json = null;\n        if (err) {\n          status = 500;\n          body = new Buffer(0);\n        } else {\n          try {\n            json = JSON.parse(body.toString());\n          } catch (e) {\n            json = null;\n          }\n        }\n        callback(status, headers, body, json);\n      });\n    }\n    get(callback) {\n      this.mock('GET', null, callback);\n    }\n    del(callback) {\n      this.mock('DELETE', null, callback);\n    }\n    post(body, callback) {\n      this.mock('POST', body, callback);\n    }\n    put(body, callback) {\n      this.mock('PUT', body, callback);\n    }\n  }\n  return EndpointRequest;\n})();","map":{"version":3,"names":["module","exports","qs","require","EndpointRequest","constructor","router","path","params","url","stringify","route","find","Error","_path","mock","method","body","callback","dispatch","prepare","err","status","headers","json","Buffer","JSON","parse","toString","e","get","del","post","put"],"sources":["/Users/apps/node_modules/fxn/core/mocha/endpoint_request.js"],"sourcesContent":["module.exports = (() => {\n\n  'use strict';\n\n  const qs = require('querystring');\n\n  class EndpointRequest {\n\n    constructor(router, path, params) {\n\n      this.router = router;\n      this.url = path + (params ? `?${qs.stringify(params)}` : '');\n      this.route = this.router.find(this.url);\n\n      if (!this.route) {\n        throw new Error(`Route for ${this._path} does not exist`);\n      }\n\n    }\n\n    mock(method, body, callback) {\n\n      return this.router.dispatch(\n        this.router.prepare(\n          '::1',\n          this.url,\n          method,\n          {},\n          body\n        ),\n        (err, status, headers, body) => {\n\n          let json = null;\n\n          if (err) {\n            status = 500;\n            body = new Buffer(0);\n          } else {\n\n            try {\n              json = JSON.parse(body.toString());\n            } catch (e) {\n              json = null;\n            }\n\n          }\n\n          callback(status, headers, body, json);\n\n        }\n      );\n\n    }\n\n    get(callback) {\n\n      this.mock('GET', null, callback);\n\n    }\n\n    del(callback) {\n\n      this.mock('DELETE', null, callback);\n\n    }\n\n    post(body, callback) {\n\n      this.mock('POST', body, callback);\n\n    }\n\n    put(body, callback) {\n\n      this.mock('PUT', body, callback);\n\n    }\n\n  }\n\n  return EndpointRequest;\n\n})();\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,CAAC,MAAM;EAEtB,YAAY;;EAEZ,MAAMC,EAAE,GAAGC,OAAO,CAAC,aAAa,CAAC;EAEjC,MAAMC,eAAe,CAAC;IAEpBC,WAAWA,CAACC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAE;MAEhC,IAAI,CAACF,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACG,GAAG,GAAGF,IAAI,IAAIC,MAAM,GAAI,IAAGN,EAAE,CAACQ,SAAS,CAACF,MAAM,CAAE,EAAC,GAAG,EAAE,CAAC;MAC5D,IAAI,CAACG,KAAK,GAAG,IAAI,CAACL,MAAM,CAACM,IAAI,CAAC,IAAI,CAACH,GAAG,CAAC;MAEvC,IAAI,CAAC,IAAI,CAACE,KAAK,EAAE;QACf,MAAM,IAAIE,KAAK,CAAE,aAAY,IAAI,CAACC,KAAM,iBAAgB,CAAC;MAC3D;IAEF;IAEAC,IAAIA,CAACC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAE;MAE3B,OAAO,IAAI,CAACZ,MAAM,CAACa,QAAQ,CACzB,IAAI,CAACb,MAAM,CAACc,OAAO,CACjB,KAAK,EACL,IAAI,CAACX,GAAG,EACRO,MAAM,EACN,CAAC,CAAC,EACFC,IACF,CAAC,EACD,CAACI,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEN,IAAI,KAAK;QAE9B,IAAIO,IAAI,GAAG,IAAI;QAEf,IAAIH,GAAG,EAAE;UACPC,MAAM,GAAG,GAAG;UACZL,IAAI,GAAG,IAAIQ,MAAM,CAAC,CAAC,CAAC;QACtB,CAAC,MAAM;UAEL,IAAI;YACFD,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACV,IAAI,CAACW,QAAQ,CAAC,CAAC,CAAC;UACpC,CAAC,CAAC,OAAOC,CAAC,EAAE;YACVL,IAAI,GAAG,IAAI;UACb;QAEF;QAEAN,QAAQ,CAACI,MAAM,EAAEC,OAAO,EAAEN,IAAI,EAAEO,IAAI,CAAC;MAEvC,CACF,CAAC;IAEH;IAEAM,GAAGA,CAACZ,QAAQ,EAAE;MAEZ,IAAI,CAACH,IAAI,CAAC,KAAK,EAAE,IAAI,EAAEG,QAAQ,CAAC;IAElC;IAEAa,GAAGA,CAACb,QAAQ,EAAE;MAEZ,IAAI,CAACH,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAEG,QAAQ,CAAC;IAErC;IAEAc,IAAIA,CAACf,IAAI,EAAEC,QAAQ,EAAE;MAEnB,IAAI,CAACH,IAAI,CAAC,MAAM,EAAEE,IAAI,EAAEC,QAAQ,CAAC;IAEnC;IAEAe,GAAGA,CAAChB,IAAI,EAAEC,QAAQ,EAAE;MAElB,IAAI,CAACH,IAAI,CAAC,KAAK,EAAEE,IAAI,EAAEC,QAAQ,CAAC;IAElC;EAEF;EAEA,OAAOd,eAAe;AAExB,CAAC,EAAE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}