{"ast":null,"code":"// inspired by https://github.com/raszi/node-tmp, but only\n// provides tmp paths.\n\nvar fs = require('fs'),\n  path = require('path'),\n  os = require('os'),\n  utils = require('./utils');\nfunction _isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\nfunction _parseArguments() {\n  var fargs = utils.varargs(arguments);\n  var callback = fargs.callback;\n  var options = fargs.all[0];\n  return [options, callback];\n}\n\n/**\n * Gets the temp directory.\n *\n * @return {String}\n * @api private\n */\nfunction _getTMPDir() {\n  var tmpNames = ['TMPDIR', 'TMP', 'TEMP'];\n  for (var i = 0, length = tmpNames.length; i < length; i++) {\n    if (_isUndefined(process.env[tmpNames[i]])) {\n      continue;\n    }\n    return process.env[tmpNames[i]];\n  }\n\n  // fallback to the default\n  return '/tmp';\n}\nvar exists = fs.exists || path.exists,\n  tmpDir = os.tmpdir || os.tmpDir || _getTMPDir,\n  _TMP = tmpDir(),\n  randomChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\",\n  randomCharsLength = randomChars.length;\n\n/**\n * Gets a temporary file name.\n *\n * @param {Object} opts\n * @param {Function} cb\n * @api private\n */\nfunction _getTmpName(options, callback) {\n  var args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1],\n    template = opts.template,\n    templateDefined = !_isUndefined(template),\n    tries = opts.tries || 3;\n  if (isNaN(tries) || tries < 0) {\n    return cb(new Error('Invalid tries'));\n  }\n  if (templateDefined && !template.match(/XXXXXX/)) {\n    return cb(new Error('Invalid template provided'));\n  }\n  function _getName() {\n    // prefix and postfix\n    if (!templateDefined) {\n      var name = [_isUndefined(opts.prefix) ? 'tmp-' : opts.prefix, process.pid, (Math.random() * 0x1000000000).toString(36), opts.postfix].join('');\n      return path.join(opts.dir || _TMP, name);\n    }\n\n    // mkstemps like template\n    var chars = [];\n    for (var i = 0; i < 6; i++) {\n      chars.push(randomChars.substr(Math.floor(Math.random() * randomCharsLength), 1));\n    }\n    return template.replace(/XXXXXX/, chars.join(''));\n  }\n  (function _getUniqueName() {\n    var name = _getName();\n\n    // check whether the path exists then retry if needed\n    exists(name, function _pathExists(pathExists) {\n      if (pathExists) {\n        if (tries-- > 0) {\n          return _getUniqueName();\n        }\n        return cb(new Error('Could not get a unique tmp filename, max tries reached'));\n      }\n      cb(null, name);\n    });\n  })();\n}\n\n// exporting all the needed methods\nmodule.exports.tmpdir = _TMP;\nmodule.exports.tmpName = _getTmpName;","map":{"version":3,"names":["fs","require","path","os","utils","_isUndefined","obj","_parseArguments","fargs","varargs","arguments","callback","options","all","_getTMPDir","tmpNames","i","length","process","env","exists","tmpDir","tmpdir","_TMP","randomChars","randomCharsLength","_getTmpName","args","opts","cb","template","templateDefined","tries","isNaN","Error","match","_getName","name","prefix","pid","Math","random","toString","postfix","join","dir","chars","push","substr","floor","replace","_getUniqueName","_pathExists","pathExists","module","exports","tmpName"],"sources":["/Users/apps/node_modules/wd/lib/tmp.js"],"sourcesContent":["// inspired by https://github.com/raszi/node-tmp, but only\n// provides tmp paths.\n\nvar\n  fs     = require('fs'),\n  path   = require('path'),\n  os     = require('os'),\n  utils     = require('./utils');\n\nfunction _isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n\nfunction _parseArguments() {\n  var fargs = utils.varargs(arguments);\n  var callback = fargs.callback;\n  var options = fargs.all[0];\n  return [ options, callback ];\n}\n\n/**\n * Gets the temp directory.\n *\n * @return {String}\n * @api private\n */\nfunction _getTMPDir() {\n  var tmpNames = [ 'TMPDIR', 'TMP', 'TEMP' ];\n\n  for (var i = 0, length = tmpNames.length; i < length; i++) {\n    if (_isUndefined(process.env[tmpNames[i]])) { continue; }\n\n    return process.env[tmpNames[i]];\n  }\n\n  // fallback to the default\n  return '/tmp';\n}\n\nvar\n  exists = fs.exists || path.exists,\n  tmpDir = os.tmpdir || os.tmpDir || _getTMPDir,\n  _TMP = tmpDir(),\n  randomChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\",\n  randomCharsLength = randomChars.length;\n\n/**\n * Gets a temporary file name.\n *\n * @param {Object} opts\n * @param {Function} cb\n * @api private\n */\nfunction _getTmpName(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1],\n    template = opts.template,\n    templateDefined = !_isUndefined(template),\n    tries = opts.tries || 3;\n\n  if (isNaN(tries) || tries < 0)\n    { return cb(new Error('Invalid tries')); }\n\n  if (templateDefined && !template.match(/XXXXXX/))\n    { return cb(new Error('Invalid template provided')); }\n\n  function _getName() {\n\n    // prefix and postfix\n    if (!templateDefined) {\n      var name = [\n        (_isUndefined(opts.prefix)) ? 'tmp-' : opts.prefix,\n        process.pid,\n        (Math.random() * 0x1000000000).toString(36),\n        opts.postfix\n      ].join('');\n\n      return path.join(opts.dir || _TMP, name);\n    }\n\n    // mkstemps like template\n    var chars = [];\n\n    for (var i = 0; i < 6; i++) {\n      chars.push(randomChars.substr(Math.floor(Math.random() * randomCharsLength), 1));\n    }\n\n    return template.replace(/XXXXXX/, chars.join(''));\n  }\n\n  (function _getUniqueName() {\n    var name = _getName();\n\n    // check whether the path exists then retry if needed\n    exists(name, function _pathExists(pathExists) {\n      if (pathExists) {\n        if (tries-- > 0) { return _getUniqueName(); }\n\n        return cb(new Error('Could not get a unique tmp filename, max tries reached'));\n      }\n\n      cb(null, name);\n    });\n  }());\n}\n\n// exporting all the needed methods\nmodule.exports.tmpdir = _TMP;\nmodule.exports.tmpName = _getTmpName;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}