{"ast":null,"code":"module.exports = (() => {\n  'use strict';\n\n  const fs = require('fs');\n  const path = require('path');\n  class TestRunner {\n    constructor(dir, router) {\n      let tests = [];\n      let addTest = dir => {\n        return filename => {\n          if (!path.extname(filename) && filename[0] !== '.') {\n            let nextDir = path.resolve(dir, filename);\n            return fs.readdirSync(nextDir).forEach(addCommand(nextDir));\n          }\n          let Test = require(path.resolve(dir, filename));\n          tests.push(new Test(this));\n        };\n      };\n      let testDir = path.resolve(process.cwd(), dir || '/');\n      fs.readdirSync(testDir).forEach(addTest(testDir));\n      this._tests = tests;\n      this.router = router;\n    }\n    start(verb) {\n      this._tests.forEach(t => {\n        t.__test__(verb);\n      });\n    }\n  }\n  return TestRunner;\n})();","map":{"version":3,"names":["module","exports","fs","require","path","TestRunner","constructor","dir","router","tests","addTest","filename","extname","nextDir","resolve","readdirSync","forEach","addCommand","Test","push","testDir","process","cwd","_tests","start","verb","t","__test__"],"sources":["/Users/apps/node_modules/fxn/core/mocha/test_runner.js"],"sourcesContent":["module.exports = (() => {\n\n  'use strict';\n\n  const fs = require('fs');\n  const path = require('path');\n\n  class TestRunner {\n\n    constructor(dir, router) {\n\n      let tests = [];\n\n      let addTest = dir => {\n\n        return filename => {\n\n          if (!path.extname(filename) && filename[0] !== '.') {\n\n            let nextDir = path.resolve(dir, filename);\n            return fs.readdirSync(nextDir).forEach(addCommand(nextDir));\n\n          }\n\n          let Test = require(path.resolve(dir, filename));\n          tests.push(new Test(this));\n\n        }\n\n      };\n\n      let testDir = path.resolve(process.cwd(), dir || '/');\n      fs.readdirSync(testDir).forEach(addTest(testDir));\n\n      this._tests = tests;\n      this.router = router;\n\n    }\n\n    start(verb) {\n\n      this._tests.forEach(t => {\n\n        t.__test__(verb);\n\n      });\n\n    }\n\n  }\n\n  return TestRunner;\n\n})();\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,CAAC,MAAM;EAEtB,YAAY;;EAEZ,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;EACxB,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;EAE5B,MAAME,UAAU,CAAC;IAEfC,WAAWA,CAACC,GAAG,EAAEC,MAAM,EAAE;MAEvB,IAAIC,KAAK,GAAG,EAAE;MAEd,IAAIC,OAAO,GAAGH,GAAG,IAAI;QAEnB,OAAOI,QAAQ,IAAI;UAEjB,IAAI,CAACP,IAAI,CAACQ,OAAO,CAACD,QAAQ,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAElD,IAAIE,OAAO,GAAGT,IAAI,CAACU,OAAO,CAACP,GAAG,EAAEI,QAAQ,CAAC;YACzC,OAAOT,EAAE,CAACa,WAAW,CAACF,OAAO,CAAC,CAACG,OAAO,CAACC,UAAU,CAACJ,OAAO,CAAC,CAAC;UAE7D;UAEA,IAAIK,IAAI,GAAGf,OAAO,CAACC,IAAI,CAACU,OAAO,CAACP,GAAG,EAAEI,QAAQ,CAAC,CAAC;UAC/CF,KAAK,CAACU,IAAI,CAAC,IAAID,IAAI,CAAC,IAAI,CAAC,CAAC;QAE5B,CAAC;MAEH,CAAC;MAED,IAAIE,OAAO,GAAGhB,IAAI,CAACU,OAAO,CAACO,OAAO,CAACC,GAAG,CAAC,CAAC,EAAEf,GAAG,IAAI,GAAG,CAAC;MACrDL,EAAE,CAACa,WAAW,CAACK,OAAO,CAAC,CAACJ,OAAO,CAACN,OAAO,CAACU,OAAO,CAAC,CAAC;MAEjD,IAAI,CAACG,MAAM,GAAGd,KAAK;MACnB,IAAI,CAACD,MAAM,GAAGA,MAAM;IAEtB;IAEAgB,KAAKA,CAACC,IAAI,EAAE;MAEV,IAAI,CAACF,MAAM,CAACP,OAAO,CAACU,CAAC,IAAI;QAEvBA,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC;MAElB,CAAC,CAAC;IAEJ;EAEF;EAEA,OAAOpB,UAAU;AAEnB,CAAC,EAAE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}