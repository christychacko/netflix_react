{"ast":null,"code":"module.exports = function () {\n  'use strict';\n\n  const async = require('async');\n\n  /**\n  * Queues middleware, renderware, etc (make sure they fire in order).\n  * @class\n  */\n  class ExecutionQueue {\n    constructor() {\n      this._queue = [];\n    }\n    prepend(executionQueue) {\n      if (!(executionQueue instanceof ExecutionQueue)) {\n        throw new Error('Can only prepend another execution queue');\n      }\n      this._queue = executionQueue._queue.concat(this._queue);\n    }\n    append(executionQueue) {\n      if (!(executionQueue instanceof ExecutionQueue)) {\n        throw new Error('Can only append another execution queue');\n      }\n      this._queue = this._queue.concat(executionQueue._queue);\n    }\n\n    /**\n    * Tell the manager to put an object in the queue (last)\n    * @param {Object} arguments The item constructor (must have exec function) plus other arguments you wish to add to the queue.\n    */\n    use() {\n      let args = [].slice.call(arguments);\n      if (args.length) {\n        let itemConstructor = args[0];\n        let item = new (itemConstructor.bind.apply(itemConstructor, args))();\n        this._queue.push(item);\n      }\n    }\n\n    /**\n    * Alias for ExecutionQueue#use\n    */\n    push() {\n      this.use.apply(this, arguments);\n    }\n\n    /**\n    * Tell the manager to put an object in the queue (first)\n    * @param {Object} arguments The item constructor (must have exec function) plus other arguments you wish to add to the queue.\n    */\n    unshift() {\n      let args = [].slice.call(arguments);\n      if (args.length) {\n        let itemConstructor = args[0];\n        let item = new (itemConstructor.bind.apply(itemConstructor, args))();\n        this._queue.unshift(item);\n      }\n    }\n\n    /**\n    * Execute all items, in order. First parameter is a \"steady\" object that will\n    * be passed by reference to every item in the queue as the first parameter of exec.\n    * Middle parameters are passed by previous item#exec calls (as parameters, after err),\n    * and last parameter is a completion callback.\n    */\n    exec() {\n      let args = [].slice.call(arguments);\n      let fnComplete = args.pop();\n      let steady = args.splice(0, 1);\n      if (steady.length && typeof steady[0] !== 'object' || steady[0] === null) {\n        steady[0] = {};\n      }\n      if (typeof fnComplete !== 'function') {\n        args.push(fnComplete);\n        fnComplete = () => {};\n      }\n      let execArray = [function (callback) {\n        callback.apply(null, [null].concat(args));\n      }].concat(this._queue.map(item => {\n        return function () {\n          item.exec.apply(item, steady.concat([].slice.call(arguments)));\n        };\n      }));\n      async.waterfall(execArray, fnComplete);\n    }\n  }\n  return ExecutionQueue;\n}();","map":{"version":3,"names":["module","exports","async","require","ExecutionQueue","constructor","_queue","prepend","executionQueue","Error","concat","append","use","args","slice","call","arguments","length","itemConstructor","item","bind","apply","push","unshift","exec","fnComplete","pop","steady","splice","execArray","callback","map","waterfall"],"sources":["/Users/apps/node_modules/fxn/core/required/execution_queue.js"],"sourcesContent":["module.exports = (function() {\n\n  'use strict';\n\n  const async = require('async');\n\n  /**\n  * Queues middleware, renderware, etc (make sure they fire in order).\n  * @class\n  */\n  class ExecutionQueue {\n\n    constructor() {\n      this._queue = [];\n    }\n\n    prepend(executionQueue) {\n      if (!(executionQueue instanceof ExecutionQueue)) {\n        throw new Error('Can only prepend another execution queue');\n      }\n      this._queue = executionQueue._queue.concat(this._queue);\n    }\n\n    append(executionQueue) {\n      if (!(executionQueue instanceof ExecutionQueue)) {\n        throw new Error('Can only append another execution queue');\n      }\n      this._queue = this._queue.concat(executionQueue._queue);\n    }\n\n    /**\n    * Tell the manager to put an object in the queue (last)\n    * @param {Object} arguments The item constructor (must have exec function) plus other arguments you wish to add to the queue.\n    */\n    use() {\n\n      let args = [].slice.call(arguments);\n\n      if (args.length) {\n        let itemConstructor = args[0];\n        let item = new (itemConstructor.bind.apply(itemConstructor, args))();\n\n        this._queue.push(item);\n      }\n\n    }\n\n    /**\n    * Alias for ExecutionQueue#use\n    */\n    push() {\n\n      this.use.apply(this, arguments);\n\n    }\n\n    /**\n    * Tell the manager to put an object in the queue (first)\n    * @param {Object} arguments The item constructor (must have exec function) plus other arguments you wish to add to the queue.\n    */\n    unshift() {\n\n      let args = [].slice.call(arguments);\n\n      if (args.length) {\n        let itemConstructor = args[0];\n        let item = new (itemConstructor.bind.apply(itemConstructor, args))();\n\n        this._queue.unshift(item);\n      }\n\n    }\n\n    /**\n    * Execute all items, in order. First parameter is a \"steady\" object that will\n    * be passed by reference to every item in the queue as the first parameter of exec.\n    * Middle parameters are passed by previous item#exec calls (as parameters, after err),\n    * and last parameter is a completion callback.\n    */\n    exec() {\n\n      let args = [].slice.call(arguments);\n\n      let fnComplete = args.pop();\n      let steady = args.splice(0, 1);\n\n      if (steady.length && typeof steady[0] !== 'object' || steady[0] === null) {\n        steady[0] = {};\n      }\n\n      if (typeof fnComplete !== 'function') {\n        args.push(fnComplete);\n        fnComplete = (() => {});\n      }\n\n      let execArray = [\n        function(callback) {\n          callback.apply(null, [null].concat(args));\n        }\n      ].concat(\n        this._queue.map(item => {\n          return function() {\n            item.exec.apply(item, steady.concat([].slice.call(arguments)));\n          };\n        })\n      );\n\n      async.waterfall(execArray, fnComplete);\n\n    }\n\n  }\n\n  return ExecutionQueue;\n\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}