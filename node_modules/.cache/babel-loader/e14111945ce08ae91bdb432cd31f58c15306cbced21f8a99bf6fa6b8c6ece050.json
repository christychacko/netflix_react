{"ast":null,"code":"module.exports = function () {\n  'use strict';\n\n  return {\n    getFunctionParameters: fn => {\n      return fn.toString().replace(/\\/\\*.*?\\*\\//g, '').replace(/\\s+/g, '').replace(/^function.*?(\\(.*?\\)).*/gi, '$1').replace(/^(.*?)=>.*/g, '$1').replace(/^\\(?(.*?)\\)?$/g, '$1').split(',').filter(v => !!v);\n    },\n    parseRegexFromString: str => {\n      let names = [];\n      let replacements = [];\n      if (str[str.length - 1] === '/') {\n        str = str.substr(0, str.length - 1);\n      }\n      str = str.replace(/(\\{(\\w+?)\\}|(\\*))/g, (m, all, name) => {\n        names.push(name);\n        replacements.push(all === '*' ? '(.*?)' : '([^\\/]+?)');\n        return `\\{${replacements.length - 1}\\}`;\n      });\n      str = str.replace(/\\/\\{([^\\/]*?)\\}$/g, (m, i) => {\n        replacements[i | 0] = `(?:\\/${replacements[i | 0]})?`;\n        return `\\{${i | 0}\\}`;\n      });\n      let final = str.replace(/\\{(.*?)\\}/g, (m, i) => {\n        return replacements[i | 0];\n      });\n      return {\n        regex: new RegExp(`^${final}/?$`),\n        names: names\n      };\n    },\n    isObject(value) {\n      return typeof value === 'object' && {}.toString.call(value) === '[object Object]';\n    },\n    parseSize(size) {\n      size = (size || '') + '';\n      let match = size.match(/^(\\d+(?:\\.\\d+)?)([kMG]?)B?$/);\n      if (!match) {\n        return 0;\n      }\n      let num = parseFloat(match[1]);\n      let mag = match[2];\n      num = num * {\n        '': 1,\n        'k': 1024,\n        'M': 1024 * 1024,\n        'G': 1024 * 1024 * 1024\n      }[mag];\n      return Math.ceil(num) || 0;\n    }\n  };\n}();","map":{"version":3,"names":["module","exports","getFunctionParameters","fn","toString","replace","split","filter","v","parseRegexFromString","str","names","replacements","length","substr","m","all","name","push","i","final","regex","RegExp","isObject","value","call","parseSize","size","match","num","parseFloat","mag","Math","ceil"],"sources":["/Users/apps/node_modules/fxn/core/required/utilities.js"],"sourcesContent":["module.exports = (function() {\n\n  'use strict';\n\n  return {\n\n    getFunctionParameters: (fn) => {\n      return fn.toString()\n        .replace(/\\/\\*.*?\\*\\//g, '')\n        .replace(/\\s+/g, '')\n        .replace(/^function.*?(\\(.*?\\)).*/gi, '$1')\n        .replace(/^(.*?)=>.*/g, '$1')\n        .replace(/^\\(?(.*?)\\)?$/g, '$1')\n        .split(',')\n        .filter(v => !!v);\n    },\n\n    parseRegexFromString: (str) => {\n\n      let names = [];\n      let replacements = [];\n\n      if (str[str.length - 1] === '/') {\n        str = str.substr(0, str.length - 1);\n      }\n\n      str = str.replace(/(\\{(\\w+?)\\}|(\\*))/g, (m, all, name) => {\n        names.push(name);\n        replacements.push((all === '*' ? '(.*?)' : '([^\\/]+?)'));\n        return `\\{${replacements.length - 1}\\}`;\n      });\n\n      str = str.replace(/\\/\\{([^\\/]*?)\\}$/g, (m, i) => {\n        replacements[i | 0] = `(?:\\/${replacements[i | 0]})?`;\n        return `\\{${i | 0}\\}`;\n      });\n\n      let final = str.replace(/\\{(.*?)\\}/g, (m, i) => {\n        return replacements[i | 0];\n      });\n\n      return {\n        regex: new RegExp(`^${final}/?$`),\n        names: names\n      };\n\n    },\n\n    isObject(value) {\n      return typeof value === 'object' &&\n        {}.toString.call(value) === '[object Object]';\n    },\n\n    parseSize(size) {\n\n      size = (size || '') + '';\n\n      let match = size.match(/^(\\d+(?:\\.\\d+)?)([kMG]?)B?$/);\n\n      if (!match) {\n        return 0;\n      }\n\n      let num = parseFloat(match[1]);\n      let mag = match[2];\n\n      num = num * {'': 1, 'k': 1024, 'M': 1024 * 1024, 'G': 1024 * 1024 * 1024}[mag];\n\n      return Math.ceil(num) || 0;\n\n    }\n\n  };\n\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}